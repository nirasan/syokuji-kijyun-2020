package main

import (
	"flag"
	"fmt"
	"strings"

	"github.com/nirasan/syokuji-kijyun-2020/pkg"
	"github.com/nirasan/syokuji-kijyun-2020/tools"
)

func main() {
	flag.Parse()
	pkgName := flag.Arg(0)
	outputFile := flag.Arg(1)

	data := make([]pkg.DietaryFiberDatum, 0)

	lines := strings.Split(src, "\n")
	for i := 0; i <= 14; i++ {
		cols := strings.Split(lines[i], " ")
		fmt.Printf("cols:%+v, len:%d", cols, len(cols))
		if i < 4 {
			data = append(data,
				pkg.DietaryFiberDatum{
					Gender: pkg.GenderMale,
					Age:    i,
				},
				pkg.DietaryFiberDatum{
					Gender: pkg.GenderFemale,
					Age:    i,
				},
			)
			continue
		}
		if len(cols) < 4 {
			continue
		}
		j := len(cols) - 4
		c1 := newDietaryFiber(pkg.GenderMale, i, cols[j])
		c2 := newDietaryFiber(pkg.GenderFemale, i, cols[j+2])
		data = append(data, c1, c2)
	}

	g := tools.NewGenerator()
	g.MustWrite("// Code generated by \"bin/dietary_fiber/main.go\"; DO NOT EDIT.\n")
	g.MustWrite("package %s\n", pkgName)
	g.MustWrite("func (d *DietaryFiber) Data() []DietaryFiberDatum {\n")
	g.MustWrite("    return []DietaryFiberDatum {\n")
	for _, d := range data {
		s := fmt.Sprintf("%#v,\n", d)
		s = strings.ReplaceAll(s, "pkg.DietaryFiberDatum", "DietaryFiberDatum")
		s = strings.ReplaceAll(s, "pkg.NullFloat64", "NullFloat64")
		g.MustWrite(s)
	}
	g.MustWrite("    }\n")
	g.MustWrite("}\n")

	g.Generate(outputFile)
}

func newDietaryFiber(gender, age int, col string) pkg.DietaryFiberDatum {
	d := pkg.DietaryFiberDatum{
		Gender: gender,
		Age:    age,
	}
	d.DGMin = pkg.NullFloat64FromString(col)
	return d
}

// PDF 156 ページの「食物繊維の食事摂取基準」のコピペ
// 元本では「0歳6〜8ヶ月」と「0歳9〜11ヶ月」が結合されているので修正している
const src = `0 ～ 5 （月） ─ ─
6 ～ 8（月） ─ ─
9 ～11（月） ─ ─
1 ～ 2 （歳） ─ ─
3 ～ 5 （歳） 8 以上 8 以上
6 ～ 7 （歳） 10 以上 10 以上
8 ～ 9 （歳） 11 以上 11 以上
10～11（歳） 13 以上 13 以上
12～14（歳） 17 以上 17 以上
15～17（歳） 19 以上 18 以上
18～29（歳） 21 以上 18 以上
30～49（歳） 21 以上 18 以上
50～64（歳） 21 以上 18 以上
65～74（歳） 20 以上 17 以上
75 以上（歳） 20 以上 17 以上
妊　婦 18 以上
授乳婦 18 以上`
