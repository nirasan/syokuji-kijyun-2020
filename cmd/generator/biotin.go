package main

import (
	"fmt"
	"strings"

	"github.com/nirasan/syokuji-kijyun-2020/data"
	"github.com/nirasan/syokuji-kijyun-2020/tools"
)

func Biotin(output string) {
	lines := strings.Split(biotinSrc, "\n")
	ages := [][]data.Age{
		{{Month: 0}, {Month: 5}},
		{{Month: 6}, {Month: 8}},
		{{Month: 9}, {Month: 11}},
		{{Year: 1}, {Year: 2}},
		{{Year: 3}, {Year: 5}},
		{{Year: 6}, {Year: 7}},
		{{Year: 8}, {Year: 9}},
		{{Year: 10}, {Year: 11}},
		{{Year: 12}, {Year: 14}},
		{{Year: 15}, {Year: 17}},
		{{Year: 18}, {Year: 29}},
		{{Year: 30}, {Year: 49}},
		{{Year: 50}, {Year: 64}},
		{{Year: 65}, {Year: 74}},
		{{Year: 75}, {Year: 100}},
	}

	list := make([]data.Biotin, 0)
	for i := 0; i <= 13; i++ {
		line := strings.ReplaceAll(lines[i], ",", "")
		cols := strings.Split(line, " ")
		j := len(cols) - 2
		a := ages[i]
		list = append(list,
			newBiotin(data.GenderMale, a[0], a[1], data.OptionNone, cols[j]),
			newBiotin(data.GenderFemale, a[0], a[1], data.OptionNone, cols[j+1]),
		)
	}

	list2 := make([]data.Biotin, 0)
	for _, d := range list {
		if d.Gender != data.GenderFemale {
			continue
		}
		list2 = append(list2,
			newBiotinWithOption(d, data.OptionEarlyPregnancy),
			newBiotinWithOption(d, data.OptionMidPregnancy),
			newBiotinWithOption(d, data.OptionLatePregnancy),
			newBiotinWithOption(d, data.OptionBreastfeeding),
		)
	}

	list = append(list, list2...)

	g := tools.NewGenerator()
	g.MustWrite("// Code generated by \"cmd/generator/main.go\"; DO NOT EDIT.\n")
	g.MustWrite("package data\n")
	g.MustWrite("func BiotinList() []Biotin {\n")
	g.MustWrite("    return []Biotin {\n")
	for _, d := range list {
		s := fmt.Sprintf("%#v,\n", d)
		s = strings.ReplaceAll(s, "data.", "")
		g.MustWrite(s)
	}
	g.MustWrite("    }\n")
	g.MustWrite("}\n")

	g.Generate(output)
}

func newBiotin(g data.Gender, from, to data.Age, o data.Option, col string) data.Biotin {
	return data.Biotin{
		Gender: g,
		From:   from,
		To:     to,
		Option: o,
		AI:     data.NilFloatFromString(col),
	}
}

func newBiotinWithOption(in data.Biotin, o data.Option) data.Biotin {
	d := data.Biotin{
		Gender: in.Gender,
		From:   in.From,
		To:     in.To,
		Option: o,
		AI:     in.AI,
	}
	var ai float64
	switch o {
	case data.OptionEarlyPregnancy, data.OptionMidPregnancy, data.OptionLatePregnancy, data.OptionBreastfeeding:
		ai = 50
	}
	if d.AI.Valid {
		d.AI.Float = ai
	}
	return d
}

// PDF 271 ページの「ビオチンの食事摂取基準」のコピペ
const biotinSrc = `0 ～ 5 （月） 4 4
6 ～11（月） 5 5
1 ～ 2 （歳） 20 20
3 ～ 5 （歳） 20 20
6 ～ 7 （歳） 30 30
8 ～ 9 （歳） 30 30
10～11（歳） 40 40
12～14（歳） 50 50
15～17（歳） 50 50
18～29（歳） 50 50
30～49（歳） 50 50
50～64（歳） 50 50
65～74（歳） 50 50
75 以上（歳） 50 50
妊　婦 50
授乳婦 50`
