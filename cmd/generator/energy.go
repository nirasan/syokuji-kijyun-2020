package main

import (
	"fmt"
	"strings"

	"github.com/nirasan/syokuji-kijyun-2020/data"
	"github.com/nirasan/syokuji-kijyun-2020/tools"
)

func Energy(output string) {
	lines := strings.Split(energySrc, "\n")
	ages := [][]data.Age{
		{{Month: 0}, {Month: 5}},
		{{Month: 6}, {Month: 8}},
		{{Month: 9}, {Month: 11}},
		{{Year: 1}, {Year: 2}},
		{{Year: 3}, {Year: 5}},
		{{Year: 6}, {Year: 7}},
		{{Year: 8}, {Year: 9}},
		{{Year: 10}, {Year: 11}},
		{{Year: 12}, {Year: 14}},
		{{Year: 15}, {Year: 17}},
		{{Year: 18}, {Year: 29}},
		{{Year: 30}, {Year: 49}},
		{{Year: 50}, {Year: 64}},
		{{Year: 65}, {Year: 74}},
		{{Year: 75}, {Year: 100}},
	}

	list := make([]data.Energy, 0)
	for i := 0; i <= 14; i++ {
		cols := strings.Split(lines[i], " ")
		j := len(cols) - 6
		a := ages[i]
		list = append(list,
			newEnergy(data.GenderMale, a[0], a[1], data.ActivityLevel1, data.OptionNone, cols[j]),
			newEnergy(data.GenderMale, a[0], a[1], data.ActivityLevel2, data.OptionNone, cols[j+1]),
			newEnergy(data.GenderMale, a[0], a[1], data.ActivityLevel3, data.OptionNone, cols[j+2]),
			newEnergy(data.GenderFemale, a[0], a[1], data.ActivityLevel1, data.OptionNone, cols[j+3]),
			newEnergy(data.GenderFemale, a[0], a[1], data.ActivityLevel2, data.OptionNone, cols[j+4]),
			newEnergy(data.GenderFemale, a[0], a[1], data.ActivityLevel3, data.OptionNone, cols[j+5]),
		)
	}

	list2 := make([]data.Energy, 0)
	for _, d := range list {
		if d.Gender != data.GenderFemale || !d.Value.Valid {
			continue
		}
		list2 = append(list2,
			newEnergyWithOption(d, data.OptionEarlyPregnancy, d.Value.Float+50),
			newEnergyWithOption(d, data.OptionMidPregnancy, d.Value.Float+250),
			newEnergyWithOption(d, data.OptionLatePregnancy, d.Value.Float+450),
			newEnergyWithOption(d, data.OptionBreastfeeding, d.Value.Float+350),
		)
	}

	list = append(list, list2...)

	g := tools.NewGenerator()
	g.MustWrite("// Code generated by \"bin/energy/main.go\"; DO NOT EDIT.\n")
	g.MustWrite("package data\n")
	g.MustWrite("func EnergyList() []Energy {\n")
	g.MustWrite("    return []Energy {\n")
	for _, d := range list {
		s := fmt.Sprintf("%#v,\n", d)
		s = strings.ReplaceAll(s, "data.", "")
		g.MustWrite(s)
	}
	g.MustWrite("    }\n")
	g.MustWrite("}\n")

	g.Generate(output)
}

func newEnergy(g data.Gender, from, to data.Age, l data.ActivityLevel, o data.Option, s string) data.Energy {
	return data.Energy{
		Gender:        g,
		From:          from,
		To:            to,
		ActivityLevel: l,
		Option:        o,
		Value:         data.NilFloatFromString(s),
	}
}

func newEnergyWithOption(e data.Energy, o data.Option, f float64) data.Energy {
	return data.Energy{
		Gender:        e.Gender,
		From:          e.From,
		To:            e.To,
		ActivityLevel: e.ActivityLevel,
		Option:        o,
		Value:         data.NilFloat{Float: f, Valid: true},
	}
}

// PDF 91 ページの「推定エネルギー必要量」のコピペ
const energySrc = `0 ～ 5 （月） ─ 550 ─ ─ 500 ─
6 ～ 8 （月） ─ 650 ─ ─ 600 ─
9 ～11（月） ─ 700 ─ ─ 650 ─
1 ～ 2 （歳） ─ 950 ─ ─ 900 ─
3 ～ 5 （歳） ─ 1,300 ─ ─ 1,250 ─
6 ～ 7 （歳） 1,350 1,550 1,750 1,250 1,450 1,650
8 ～ 9 （歳） 1,600 1,850 2,100 1,500 1,700 1,900
10～11（歳） 1,950 2,250 2,500 1,850 2,100 2,350
12～14（歳） 2,300 2,600 2,900 2,150 2,400 2,700
15～17（歳） 2,500 2,800 3,150 2,050 2,300 2,550
18～29（歳） 2,300 2,650 3,050 1,700 2,000 2,300
30～49（歳） 2,300 2,700 3,050 1,750 2,050 2,350
50～64（歳） 2,200 2,600 2,950 1,650 1,950 2,250
65～74（歳） 2,050 2,400 2,750 1,550 1,850 2,100
75 以上（歳）2 1,800 2,100 ─ 1,400 1,650 ─
妊婦（付加量）3 初期
　　　　　　　中期
　　　　　　　後期
＋50
＋250
＋450
＋50
＋250
＋450
＋50
＋250
＋450
授乳婦（付加量） ＋350 ＋350 ＋350`
