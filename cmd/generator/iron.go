package main

import (
	"fmt"
	"strings"

	"github.com/nirasan/syokuji-kijyun-2020/data"
	"github.com/nirasan/syokuji-kijyun-2020/tools"
)

func Iron(output string) {
	lines := strings.Split(ironSrc, "\n")
	ages := [][]data.Age{
		{{Month: 0}, {Month: 5}},
		{{Month: 6}, {Month: 11}},
		{{Year: 1}, {Year: 2}},
		{{Year: 3}, {Year: 5}},
		{{Year: 6}, {Year: 7}},
		{{Year: 8}, {Year: 9}},
		{{Year: 10}, {Year: 11}},
		{{Year: 12}, {Year: 14}},
		{{Year: 15}, {Year: 17}},
		{{Year: 18}, {Year: 29}},
		{{Year: 30}, {Year: 49}},
		{{Year: 50}, {Year: 64}},
		{{Year: 65}, {Year: 74}},
		{{Year: 75}, {Year: 100}},
	}

	list := make([]data.Iron, 0)
	for i := 0; i <= 13; i++ {
		line := strings.ReplaceAll(lines[i], ",", "")
		cols := strings.Split(line, " ")
		j := len(cols) - 10
		a := ages[i]

		female := []string{
			cols[j+4],
			cols[j+5],
			cols[j+8],
			cols[j+9],
		}

		list = append(list,
			newIron(data.GenderMale, a[0], a[1], data.OptionNone, cols[j:j+4]),
			newIron(data.GenderFemale, a[0], a[1], data.OptionNone, female),
			newIron(data.GenderFemale, a[0], a[1], data.OptionMenstruation, cols[j+6:j+10]),
		)
	}

	list2 := make([]data.Iron, 0)
	for _, d := range list {
		if d.Gender != data.GenderFemale || d.Option == data.OptionMenstruation {
			continue
		}
		list2 = append(list2,
			newIronWithOption(d, data.OptionEarlyPregnancy),
			newIronWithOption(d, data.OptionMidPregnancy),
			newIronWithOption(d, data.OptionLatePregnancy),
			newIronWithOption(d, data.OptionBreastfeeding),
		)
	}

	list = append(list, list2...)

	g := tools.NewGenerator()
	g.MustWrite("// Code generated by \"cmd/generator/main.go\"; DO NOT EDIT.\n")
	g.MustWrite("package data\n")
	g.MustWrite("func IronList() []Iron {\n")
	g.MustWrite("    return []Iron {\n")
	for _, d := range list {
		s := fmt.Sprintf("%#v,\n", d)
		s = strings.ReplaceAll(s, "data.", "")
		g.MustWrite(s)
	}
	g.MustWrite("    }\n")
	g.MustWrite("}\n")

	g.Generate(output)
}

func newIron(g data.Gender, from, to data.Age, o data.Option, cols []string) data.Iron {
	return data.Iron{
		Gender: g,
		From:   from,
		To:     to,
		Option: o,
		EAR:    data.NilFloatFromString(cols[0]),
		RDA:    data.NilFloatFromString(cols[1]),
		AI:     data.NilFloatFromString(cols[2]),
		UL:     data.NilFloatFromString(cols[3]),
	}
}

func newIronWithOption(in data.Iron, o data.Option) data.Iron {
	d := data.Iron{
		Gender: in.Gender,
		From:   in.From,
		To:     in.To,
		Option: o,
		EAR:    in.EAR,
		RDA:    in.RDA,
		AI:     in.AI,
		UL:     in.UL,
	}
	var ear, rda float64
	switch o {
	case data.OptionEarlyPregnancy:
		ear, rda = 2, 2.5
	case data.OptionMidPregnancy, data.OptionLatePregnancy:
		ear, rda = 8, 9.5
	case data.OptionBreastfeeding:
		ear, rda = 2, 2.5
	}
	if d.EAR.Valid {
		d.EAR.Float += ear
	}
	if d.RDA.Valid {
		d.RDA.Float += rda
	}
	return d
}

// PDF 373 ページの「鉄の食事摂取基準」
const ironSrc = `0 ～ 5 	（月） ─ ─ 0.5 ─ ─ ─ ─ ─ 0.5 ─
6 ～11（月） 3.5 5.0 ─ ─ 3.5 4.5 ─ ─ ─ ─
1 ～ 2 	（歳） 3.0 4.5 ─ 25 3.0 4.5 ─ ─ ─ 20
3 ～ 5 	（歳） 4.0 5.5 ─ 25 4.0 5.5 ─ ─ ─ 25
6 ～ 7 	（歳） 5.0 5.5 ─ 30 4.5 5.5 ─ ─ ─ 30
8 ～ 9 	（歳） 6.0 7.0 ─ 35 6.0 7.5 ─ ─ ─ 35
10～11（歳） 7.0 8.5 ─ 35 7.0 8.5 10.0 12.0 ─ 35
12～14（歳） 8.0 10.0 ─ 40 7.0 8.5 10.0 12.0 ─ 40
15～17（歳） 8.0 10.0 ─ 50 5.5 7.0 8.5 10.5 ─ 40
18～29（歳） 6.5 7.5 ─ 50 5.5 6.5 8.5 10.5 ─ 40
30～49（歳） 6.5 7.5 ─ 50 5.5 6.5 9.0 10.5 ─ 40
50～64（歳） 6.5 7.5 ─ 50 5.5 6.5 9.0 11.0 ─ 40
65～74（歳） 6.0 7.5 ─ 50 5.0 6.0 ─ ─ ─ 40
75 以上（歳） 6.0 7.0 ─ 50 5.0 6.0 ─ ─ ─ 40
妊婦（付加量）
初期
中期・後期
＋2.0
＋8.0
＋2.5
＋9.5
─
─
─
─
─
─
─
─
授乳婦（付加量） ＋2.0 ＋2.5 ─ ─ ─ ─`
