package main

import (
	"fmt"
	"strings"

	"github.com/nirasan/syokuji-kijyun-2020/data"
	"github.com/nirasan/syokuji-kijyun-2020/tools"
)

// Lipid は PDF 156 ページの「脂質の食事摂取基準」をパースして Go の構造体を作成します
func Lipid(output string) {
	lines := strings.Split(lipidSrc, "\n")
	ages := [][]data.Age{
		{{Month: 0}, {Month: 5}},
		{{Month: 6}, {Month: 11}},
		{{Year: 1}, {Year: 2}},
		{{Year: 3}, {Year: 5}},
		{{Year: 6}, {Year: 7}},
		{{Year: 8}, {Year: 9}},
		{{Year: 10}, {Year: 11}},
		{{Year: 12}, {Year: 14}},
		{{Year: 15}, {Year: 17}},
		{{Year: 18}, {Year: 29}},
		{{Year: 30}, {Year: 49}},
		{{Year: 50}, {Year: 64}},
		{{Year: 65}, {Year: 74}},
		{{Year: 75}, {Year: 100}},
	}

	list := make([]data.Lipid, 0)
	for i := 0; i <= 13; i++ {
		cols := strings.Split(lines[i], " ")
		j := len(cols) - 4
		a := ages[i]
		list = append(list,
			newLipid(data.GenderMale, a[0], a[1], data.OptionNone, cols[j:j+2]),
			newLipid(data.GenderFemale, a[0], a[1], data.OptionNone, cols[j+2:j+4]),
		)
	}

	list2 := make([]data.Lipid, 0)
	for _, d := range list {
		if d.Gender != data.GenderFemale {
			continue
		}
		if d.DG.Min.Valid && d.DG.Max.Valid {
			list2 = append(list2,
				newLipidWithOption(d, data.OptionEarlyPregnancy),
				newLipidWithOption(d, data.OptionMidPregnancy),
				newLipidWithOption(d, data.OptionLatePregnancy),
				newLipidWithOption(d, data.OptionBreastfeeding),
			)
		}
	}

	list = append(list, list2...)

	g := tools.NewGenerator()
	g.MustWrite("// Code generated by \"cmd/generator/main.go\"; DO NOT EDIT.\n")
	g.MustWrite("package data\n")
	g.MustWrite("func LipidList() []Lipid {\n")
	g.MustWrite("    return []Lipid {\n")
	for _, d := range list {
		s := fmt.Sprintf("%#v,\n", d)
		s = strings.ReplaceAll(s, "data.", "")
		g.MustWrite(s)
	}
	g.MustWrite("    }\n")
	g.MustWrite("}\n")

	g.Generate(output)
}

func newLipid(g data.Gender, from, to data.Age, o data.Option, cols []string) data.Lipid {
	return data.Lipid{
		Gender: g,
		From:   from,
		To:     to,
		Option: o,
		AI:     data.NilFloatFromString(cols[0]),
		DG:     newLipidDG(cols[1]),
	}
}

func newLipidDG(s string) data.NilFloatRange {
	pair := strings.Split(s, "～")
	if len(pair) == 2 {
		return data.NilFloatRange{
			Min: data.NilFloatFromString(pair[0]),
			Max: data.NilFloatFromString(pair[1]),
		}
	}
	return data.NilFloatRange{
		Min: data.NilFloat{},
		Max: data.NilFloat{},
	}
}

func newLipidWithOption(in data.Lipid, o data.Option) data.Lipid {
	d := data.Lipid{
		Gender: in.Gender,
		From:   in.From,
		To:     in.To,
		Option: o,
		AI:     in.AI,
		DG:     in.DG,
	}
	return d
}

const lipidSrc = `0 ～ 5 （月） 50 ─ 50 ─
6 ～11（月） 40 ─ 40 ─
1 ～ 2 （歳） ─ 20～30 ─ 20～30
3 ～ 5 （歳） ─ 20～30 ─ 20～30
6 ～ 7 （歳） ─ 20～30 ─ 20～30
8 ～ 9 （歳） ─ 20～30 ─ 20～30
10～11（歳） ─ 20～30 ─ 20～30
12～14（歳） ─ 20～30 ─ 20～30
15～17（歳） ─ 20～30 ─ 20～30
18～29（歳） ─ 20～30 ─ 20～30
30～49（歳） ─ 20～30 ─ 20～30
50～64（歳） ─ 20～30 ─ 20～30
65～74（歳） ─ 20～30 ─ 20～30
75 以上（歳） ─ 20～30 ─ 20～30
妊　婦 ─ 20～30
授乳婦 ─ 20～30`
